name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: bayesian-ssh-linux-x86_64
            bin_name: bayesian-ssh

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build release binary
      run: |
        cargo build --release --target ${{ matrix.target }}
        if [ "${{ runner.os }}" = "Windows" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.bin_name }} ${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.bin_name }} ${{ matrix.asset_name }}
        fi

    - name: Generate checksum
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          certutil -hashfile ${{ matrix.asset_name }} SHA256 > ${{ matrix.asset_name }}.sha256
        else
          shasum -a 256 ${{ matrix.asset_name }} > ${{ matrix.asset_name }}.sha256
        fi

    - name: Upload release assets
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: |
          ${{ matrix.asset_name }}
          ${{ matrix.asset_name }}.sha256

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/bayesian-ssh-linux-x86_64
        asset_name: bayesian-ssh-linux-x86_64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/bayesian-ssh-linux-x86_64.sha256
        asset_name: bayesian-ssh-linux-x86_64.sha256
        asset_content_type: text/plain


